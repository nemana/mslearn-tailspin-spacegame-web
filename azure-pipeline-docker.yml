trigger:
- '*'

variables:
  buildConfiguration: 'Release'
  webRepository: 'web'
  tag: '$(Build.BuildId)'

stages:
- stage: 'Build'
  displayName: 'Build and push'
  jobs:
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'ubuntu-18.04'
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Build the project - $(buildConfiguration)'
      inputs:
        command: 'build'
        arguments: '--no-restore --configuration $(buildConfiguration)'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Publish the project - $(buildConfiguration)'
      inputs:
        command: 'publish'
        projects: '**/*.csproj'
        publishWebProjects: false
        arguments: '--no-build --configuration Release --output $(Build.SourcesDirectory)/Tailspin.SpaceGame.Web/bin/$(buildConfiguration)/publish'
        zipAfterPublish: false

    - task: Docker@2
      displayName: 'Build and push the image to container registry'
      inputs:
        command: buildAndPush
        buildContext: $(Build.Repository.LocalPath)/Tailspin.SpaceGame.Web
        repository: $(webRepository)
        dockerfile: '$(Build.SourcesDirectory)/Tailspin.SpaceGame.Web/Dockerfile'
        containerRegistry: 'Container Registry Connection'
        tags: |
          $(tag)

- stage: 'Deploy'
  displayName: 'Deploy the container'
  dependsOn: Build
  jobs:
  - job: 'Deploy'
    displayName: 'Deploy job'
    pool:
      vmImage: 'ubuntu-18.04'
    variables:
    - group: Release
    steps:
    - task: AzureWebAppContainer@1
      inputs:
        appName: $(ContainerApp)
        azureSubscription: 'web deployment'
        imageName: $(RegistryName)/$(webRepository):$(build.buildId)


